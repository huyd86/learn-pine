//=== Debugging from inside ‘for’ loops

//@version=4
study("Debugging from inside `for` loops")
i_lookBack = input(20, minval = 0)

float trBalance = 0
for _i = 1 to i_lookBack
    trBalance := trBalance + sign(tr - tr[_i])

hline(0)
plot(trBalance)

//====== Extracting a single value

//@version=4
study("Debugging from inside `for` loops", max_lines_count = 500, max_labels_count = 500)
i_lookBack = input(20, minval = 0)

float val = na
float trBalance = 0
for _i = 1 to i_lookBack
    trBalance := trBalance + sign(tr - tr[_i])
    if _i == i_lookBack
        val := tr[_i]
hline(0)
plot(trBalance)
plot(val, "val", color.black)

//====== Using lines and labels

//@version=4
study("Debugging from inside `for` loops", max_lines_count = 500, max_labels_count = 500)
i_lookBack = input(20, minval = 0)

float trBalance = 0
for _i = 1 to i_lookBack
    trBalance := trBalance + sign(tr - tr[_i])
    line.new(bar_index[1], tr[_i], bar_index, tr[_i], color = color.black)
    label.new(bar_index, tr[_i], tostring(_i) + "•" + tostring(tr[_i]), style = label.style_none, size = size.small)

hline(0)
plot(trBalance)

//====== Extracting multiple values

//@version=4
study("Debugging from inside `for` loops", max_lines_count = 500, max_labels_count = 500)
i_lookBack = input(20, minval = 0)

string = ""
float trBalance = 0
for _i = 1 to i_lookBack
    trBalance := trBalance + sign(tr - tr[_i])
    string := string + tostring(_i, "00") + "•" + tostring(tr[_i]) + "\n"

label.new(bar_index, 0, string, style = label.style_none, size = size.small, textalign = text.align_left)
hline(0)
plot(trBalance)

for _i = 1 to i_lookBack
    lowerRangeBalance := lowerRangeBalance + sign(tr - tr[_i])
    if _i % 2 == 0
        string := string + tostring(_i, "00") + "•" + tostring(tr[_i]) + "\n"
