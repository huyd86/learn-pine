//=== Script alerts

//=== ‘alert()’ function events

//=== Using all ‘alert()’ calls

//@version=4
study("All `alert()` calls")
r = rsi(close, 20)

// Detect crosses.
xUp = crossover( r, 50)
xDn = crossunder(r, 50)
// Trigger an alert on crosses.
if xUp
    alert("Go long (RSI is " + tostring(r, "#.00)"))
else if xDn
    alert("Go short (RSI is " + tostring(r, "#.00)"))

plotchar(xUp, "Go Long",  "▲", location.bottom, color.lime, size = size.tiny)
plotchar(xDn, "Go Short", "▼", location.top,    color.red,  size = size.tiny)
hline(50)
plot(r)

// Trigger an alert on crosses.
if xUp or xDn
    firstPart = (xUp ? "Go long" : "Go short") + " (RSI is "
    alert(firstPart + tostring(r, "#.00)"))

//=== Using selective ‘alert()’ calls

//@version=4
study("Selective `alert()` calls")
i_detectLongs  = input(true,  "Detect Longs")
i_detectShorts = input(true,  "Detect Shorts")
i_repaint      = input(false, "Allow Repainting")

r = rsi(close, 20)
// Detect crosses.
xUp = crossover( r, 50)
xDn = crossunder(r, 50)
// Only generate entries when the trade's direction is allowed in inputs.
enterLong  = i_detectLongs  and xUp and (i_repaint or barstate.isconfirmed)
enterShort = i_detectShorts and xDn and (i_repaint or barstate.isconfirmed)
// Trigger the alerts only when the compound condition is met.
if enterLong
    alert("Go long (RSI is " + tostring(r, "#.00)"))
else if enterShort
    alert("Go short (RSI is " + tostring(r, "#.00)"))

plotchar(enterLong,  "Go Long",  "▲", location.bottom, color.lime, size = size.tiny)
plotchar(enterShort, "Go Short", "▼", location.top,    color.red,  size = size.tiny)
hline(50)
plot(r)

//=== In strategies

//@version=4
strategy("Strategy with selective `alert()` calls")
r = rsi(close, 20)

// Detect crosses.
xUp = crossover( r, 50)
xDn = crossunder(r, 50)
// Place orders on crosses.
if xUp
    strategy.entry("Long", strategy.long)
else if xDn
    strategy.entry("Short", strategy.short)

// Trigger an alert when RSI diverges from our trade's direction.
divInLongTrade  = strategy.position_size > 0 and falling(r, 3)
divInShortTrade = strategy.position_size < 0 and rising( r, 3)
if divInLongTrade
    alert("WARNING: Falling RSI", alert.freq_once_per_bar_close)
if divInShortTrade
    alert("WARNING: Rising RSI", alert.freq_once_per_bar_close)

plotchar(xUp, "Go Long",  "▲", location.bottom, color.lime, size = size.tiny)
plotchar(xDn, "Go Short", "▼", location.top,    color.red,  size = size.tiny)
plotchar(divInLongTrade,  "WARNING: Falling RSI", "•", location.top,    color.red,  size = size.tiny)
plotchar(divInShortTrade, "WARNING: Rising RSI",  "•", location.bottom, color.lime, size = size.tiny)
hline(50)
plot(r)

//=== Order fill events

//@version=4
strategy("Strategy using `alert_message`")
r = rsi(close, 20)

// Detect crosses.
xUp = crossover( r, 50)
xDn = crossunder(r, 50)
// Place order on crosses using a custom alert message for each.
if xUp
    strategy.entry("Long", strategy.long, stop = high, alert_message = "Stop-buy executed (stop was " + tostring(high) + ")")
else if xDn
    strategy.entry("Short", strategy.short, stop = low, alert_message = "Stop-sell executed (stop was " + tostring(low) + ")")

plotchar(xUp, "Go Long",  "▲", location.bottom, color.lime, size = size.tiny)
plotchar(xDn, "Go Short", "▼", location.top,    color.red,  size = size.tiny)
hline(50)
plot(r)
