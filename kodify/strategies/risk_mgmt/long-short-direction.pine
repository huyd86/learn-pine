// Source: https://kodify.net/tradingview/risks/long-short-direction/
// Have a TradingView strategy only trade long or short: the strategy.risk.allow_entry_in() function

//=== Limit trading risks with only long or short trades

strategy.risk.allow_entry_in(value)

// Only submit enter long orders
strategy.risk.allow_entry_in(strategy.direction.long)

// Only enter short trades
strategy.risk.allow_entry_in(strategy.direction.short)

//=== Features of TradingView’s

Only affects the current trading strategy
Influences the strategy script at all times
Cannot be used with a condition
Turns entry orders into exit trades
Can still trade both long or short

//=== Example strategies that use strategy.risk.allow_entry_in()

//====== Only trade long positions

//@version=3
strategy(title="Allow entry in example", overlay=true)

// Calculate moving averages
fastMA = sma(close, 20)
slowMA = sma(close, 50)

// Plot averages on the chart
plot(series=fastMA, color=teal)
plot(series=slowMA, color=orange, linewidth=2)

// Only trade from the long side
strategy.risk.allow_entry_in(strategy.direction.long)

// Submit orders
if (crossover(fastMA, slowMA))
    strategy.entry(id="EL", long=true)

if (crossunder(fastMA, slowMA))
    strategy.entry(id="ES", long=false)

//====== Only execute short trades

//@version=3
strategy(title="Allow entry in - short only", overlay=true)

// Calculate highest high and lowest low
hiHighs = highest(high, 20)[1]
loLows  = lowest(low, 20)[1]

// Show 20-bar highs and lows on the chart
plot(series=hiHighs, style=circles, color=green, linewidth=2)
plot(series=loLows, style=circles, color=red, linewidth=2)

// Only trade from the short side
strategy.risk.allow_entry_in(strategy.direction.short)

// Submit orders
if (crossover(close, hiHighs))
    strategy.entry(id="EL", long=true)

if (crossunder(close, loLows))
    strategy.entry(id="ES", long=false)

//=== Strengths and weaknesses of strategy.risk.allow_entry_in()

These are strong features of strategy.risk.allow_entry_in():

This risk management function makes it easy to quickly disable long or short trades, without having to alter the script’s code significantly.
This function also makes it possible for the strategy.entry() function to close positions (and not also open a new trade in the other direction). That means we don’t have to rewrite our strategy.entry() lines with the strategy.exit() function .

But there are also strategy.risk.allow_entry_in() features that aren’t useful:

This risk management function cannot be set conditionally or changed during a backtest. That way strategy.risk.allow_entry_in() affects the entire backtest period and all real-time signals. So to make our strategy stop trading shorts during certain market conditions, we’ll need to come up with custom code.
This risk management function doesn’t apply to orders send by the strategy.order() function . So when we forbid short entries with strategy.risk.allow_entry_in(), our strategy can still trade short positions with strategy.order().
We cannot toggle or configure the behaviour of strategy.risk.allow_entry_in() by hand. To change this risk management rule we instead have to edit strategy code. But when we save an edited strategy script, TradingView resets all its input options back to their standard values. So we’ll also need to reconfigure our strategy whenever we change strategy.risk.allow_entry_in().

//=== Other TradingView risk management functions

//=== Summary
